# Multi-stage Dockerfile for both frontend and backend
# This is for development/testing purposes only
# Production should use docker-compose.yml

FROM node:18-alpine AS frontend-build

# Build Frontend
WORKDIR /app/frontend
COPY frontend/package*.json ./
RUN npm ci
COPY frontend/ ./
RUN npm run build

FROM node:18-alpine AS backend-build

# Build Backend
WORKDIR /app/backend
COPY backend/package*.json ./
RUN npm ci --only=production
COPY backend/ ./
RUN mkdir -p uploads

FROM nginx:alpine AS production

# Copy built frontend
COPY --from=frontend-build /app/frontend/dist /usr/share/nginx/html

# Copy nginx config
COPY frontend/nginx.conf /etc/nginx/conf.d/default.conf

# Copy backend (this is not ideal for production, just for demo)
COPY --from=backend-build /app/backend /app/backend

EXPOSE 80 5000

# Note: This is not recommended for production
# Use docker-compose.yml instead for proper separation