# Production-Ready Nginx Configuration for EMS (ems.formonex.in)
# Optimized for security, performance, and scalability

# Rate limiting zones - Add this to main nginx.conf http block
# http {
#     limit_req_zone $binary_remote_addr zone=login_limit:10m rate=5r/m;
#     limit_req_zone $binary_remote_addr zone=api_limit:10m rate=30r/m;
#     limit_req_zone $binary_remote_addr zone=general_limit:10m rate=100r/m;
#     limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
# }

# Upstream backend servers for load balancing
upstream ems_backend {
    server 65.0.94.0:8000 max_fails=3 fail_timeout=30s weight=1;
    # Add more backend servers for high availability
    # server 65.0.94.1:8000 max_fails=3 fail_timeout=30s weight=1 backup;
    
    # Health check
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

# Upstream frontend servers (if using multiple instances)
upstream ems_frontend {
    server 127.0.0.1:3000 max_fails=3 fail_timeout=30s;
    # server 127.0.0.1:3001 max_fails=3 fail_timeout=30s backup;
    
    keepalive 16;
}

# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name ems.formonex.in www.ems.formonex.in;
    
    # Security headers even for redirects
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    
    # Redirect to HTTPS
    return 301 https://ems.formonex.in$request_uri;
}

# WWW to non-WWW redirect (HTTPS)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.ems.formonex.in;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/ems.formonex.in/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ems.formonex.in/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/ems.formonex.in/chain.pem;
    
    # Redirect to non-WWW
    return 301 https://ems.formonex.in$request_uri;
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ems.formonex.in;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/ems.formonex.in/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ems.formonex.in/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/ems.formonex.in/chain.pem;
    
    # Modern SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # SSL Session Configuration
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=()" always;
    
    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.jsdelivr.net; font-src 'self' https://fonts.gstatic.com https://cdn.jsdelivr.net; img-src 'self' data: blob: https:; connect-src 'self' wss: https:; media-src 'self'; object-src 'none'; child-src 'self'; worker-src 'self' blob:; frame-ancestors 'self'; base-uri 'self'; form-action 'self';" always;
    
    # Performance optimizations
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/atom+xml
        image/svg+xml;
    
    # Brotli compression (if available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Client settings
    client_max_body_size 50M;
    client_body_buffer_size 1m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Connection settings
    limit_conn conn_limit_per_ip 20;
    
    # Frontend Static Files
    root /var/www/ems-frontend;
    index index.html index.htm;
    
    # Frontend Routes with rate limiting
    location / {
        limit_req zone=general_limit burst=50 nodelay;
        
        try_files $uri $uri/ @frontend;
        
        # Cache control for different file types
        location ~* \.(js|css|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Security headers for static assets
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            
            # Optional: Enable CORS for fonts
            add_header Access-Control-Allow-Origin "*";
        }
        
        location ~* \.(png|jpg|jpeg|gif|ico|svg|webp|avif)$ {
            expires 6M;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Image optimization headers
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
        }
        
        location ~* \.(html|htm)$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
            add_header Vary "Accept-Encoding";
            
            # Security headers for HTML
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
        }
    }
    
    # Fallback to React app
    location @frontend {
        try_files /index.html =404;
        
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
    }
    
    # Authentication API with strict rate limiting
    location /api/auth/ {
        limit_req zone=login_limit burst=10 nodelay;
        
        proxy_pass http://ems_backend/api/auth/;
        include /etc/nginx/proxy_params;
        
        # Enhanced security for auth endpoints
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # CORS for auth
        add_header 'Access-Control-Allow-Origin' 'https://ems.formonex.in' always;
        add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With, X-CSRF-Token' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        # Preflight handling
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://ems.formonex.in' always;
            add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With, X-CSRF-Token' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 86400;
            return 204;
        }
        
        # Timeout settings for auth
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # No caching for auth endpoints
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # General API endpoints
    location /api/ {
        limit_req zone=api_limit burst=100 nodelay;
        
        proxy_pass http://ems_backend/api/;
        include /etc/nginx/proxy_params;
        
        # Proxy headers
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # CORS Headers
        add_header 'Access-Control-Allow-Origin' 'https://ems.formonex.in' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With, X-CSRF-Token' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        # Preflight handling
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://ems.formonex.in' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With, X-CSRF-Token' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 86400;
            return 204;
        }
        
        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # Error handling
        proxy_intercept_errors on;
        error_page 502 503 504 /50x.html;
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://ems_backend/health;
        include /etc/nginx/proxy_params;
        
        # Quick timeouts for health checks
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        
        # Cache health checks briefly
        proxy_cache_valid 200 30s;
        proxy_cache_valid 404 502 503 504 1s;
        
        # Allow monitoring tools
        allow 127.0.0.1;
        allow ::1;
        # Add your monitoring server IPs
        # allow 10.0.0.0/8;
        # deny all;
    }
    
    # WebSocket proxy for real-time features
    location /socket.io/ {
        proxy_pass http://ems_backend/socket.io/;
        
        # WebSocket specific configuration
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # WebSocket timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 3600s;
        
        # Disable buffering for real-time
        proxy_buffering off;
        proxy_cache off;
        proxy_redirect off;
        
        # WebSocket headers
        proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
        proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
        proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;
        proxy_set_header Sec-WebSocket-Protocol $http_sec_websocket_protocol;
    }
    
    # File upload endpoint with larger limits
    location /api/upload {
        limit_req zone=api_limit burst=10 nodelay;
        
        client_max_body_size 100M;
        client_body_timeout 300s;
        
        proxy_pass http://ems_backend/api/upload;
        include /etc/nginx/proxy_params;
        
        # Upload-specific settings
        proxy_request_buffering off;
        proxy_buffering off;
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }
    
    # Admin panel with IP restrictions
    location /api/admin/ {
        # Restrict admin access to specific IPs
        # allow 192.168.1.0/24;
        # allow 10.0.0.0/8;
        # deny all;
        
        limit_req zone=api_limit burst=20 nodelay;
        
        proxy_pass http://ems_backend/api/admin/;
        include /etc/nginx/proxy_params;
        
        # Admin-specific headers
        proxy_set_header X-Admin-Request "true";
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Enhanced logging for admin actions
        access_log /var/log/nginx/ems-admin-access.log;
    }
    
    # Security endpoints
    location ~ ^/(\.well-known|robots\.txt|favicon\.ico|sitemap\.xml)$ {
        try_files $uri =404;
        
        expires 1d;
        add_header Cache-Control "public";
        access_log off;
    }
    
    # Block suspicious requests
    location ~ ^/(wp-admin|wp-login|admin|phpmyadmin|mysql|sql) {
        deny all;
        access_log off;
        log_not_found off;
        return 444;
    }
    
    # Block common exploit attempts
    location ~ \.(php|asp|aspx|jsp|cgi)$ {
        deny all;
        access_log off;
        log_not_found off;
        return 444;
    }
    
    # Hide nginx version and other sensitive info
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /var/www/ems-frontend;
        internal;
    }
    
    location = /50x.html {
        root /var/www/ems-frontend;
        internal;
    }
    
    # Logging with detailed format
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       '$request_time $upstream_response_time '
                       '$upstream_addr $upstream_status';
    
    access_log /var/log/nginx/ems-access.log detailed;
    error_log /var/log/nginx/ems-error.log warn;
}