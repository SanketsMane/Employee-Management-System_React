version: '3.8'

services:
  # Frontend Service - Formonex Production
  frontend:
    image: sanketsmane/ems-frontend:v4.2
    container_name: formonex_ems_frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"  # HTTPS support
    environment:
      - VITE_API_BASE_URL=https://65.0.94.0:8000/api
      - VITE_WEBSOCKET_URL=wss://65.0.94.0:8000
      - VITE_APP_NAME=Formonex EMS - Employee Management System
      - VITE_APP_VERSION=1.0.0
      - VITE_ENVIRONMENT=production
      - VITE_COMPANY_NAME=Formonex
      - VITE_ENABLE_WEBSOCKET=true
      - VITE_ENABLE_NOTIFICATIONS=true
      - VITE_ENABLE_FILE_UPLOAD=true
    depends_on:
      - backend
    networks:
      - formonex-ems-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "com.formonex.service=frontend"
      - "com.formonex.environment=production"
      - "com.formonex.domain=ems.formonex.in"

  # Backend Service - Formonex Production
  backend:
    image: sanketsmane/ems-backend:v4.1
    container_name: formonex_ems_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - PORT=8000
      - FRONTEND_URL=https://ems.formonex.in
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE=${JWT_EXPIRE:-7d}
      - EMAIL_ENABLED=${EMAIL_ENABLED:-true}
      - EMAIL_HOST=${EMAIL_HOST:-smtp.gmail.com}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - EMAIL_FROM=${EMAIL_FROM}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW:-150}
      - RATE_LIMIT_MAX=${RATE_LIMIT_MAX:-100}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-https://ems.formonex.in,https://formonex.in}
      - COMPANY_NAME=${COMPANY_NAME:-Formonex}
      - COMPANY_EMAIL=${COMPANY_EMAIL:-info@formonex.com}
    volumes:
      - formonex_uploads:/app/uploads
      - formonex_logs:/app/logs
      - ./data/backups:/data/backups
    networks:
      - formonex-ems-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "com.formonex.service=backend"
      - "com.formonex.environment=production"
      - "com.formonex.api=api.ems.formonex.in"

networks:
  formonex-ems-network:
    driver: bridge
    name: formonex_ems_network
    labels:
      - "com.formonex.network=production"

volumes:
  formonex_uploads:
    driver: local
    name: formonex_ems_uploads
    labels:
      - "com.formonex.volume=uploads"
  formonex_logs:
    driver: local
    name: formonex_ems_logs
    labels:
      - "com.formonex.volume=logs"

# Production deployment configuration for Formonex EMS
# Usage: 
#   1. Create .env.prod from .env.formonex.template
#   2. Fill in required environment variables
#   3. Run: docker-compose -f docker-compose.formonex.yml --env-file .env.prod up -d
#   4. Access: http://ems.formonex.in (frontend) and API via configured backend IP